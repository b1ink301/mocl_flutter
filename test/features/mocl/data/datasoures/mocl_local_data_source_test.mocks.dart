// Mocks generated by Mockito 5.4.4 from annotations
// in mocl_flutter/test/features/mocl/data/datasoures/mocl_local_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mocl_flutter/features/mocl/data/datasources/main_data_source.dart'
    as _i2;
import 'package:mocl_flutter/features/mocl/data/models/main_item_model.dart'
    as _i6;
import 'package:mocl_flutter/features/mocl/domain/entities/mocl_main_item.dart'
    as _i4;
import 'package:mocl_flutter/features/mocl/domain/entities/mocl_site_type.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [MainDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMainDataSource extends _i1.Mock implements _i2.MainDataSource {
  MockMainDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.MainItem>> get(_i5.SiteType? siteType) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [siteType],
        ),
        returnValue: _i3.Future<List<_i4.MainItem>>.value(<_i4.MainItem>[]),
      ) as _i3.Future<List<_i4.MainItem>>);

  @override
  _i3.Future<List<int>> set(
    _i5.SiteType? siteType,
    List<_i4.MainItem>? list,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #set,
          [
            siteType,
            list,
          ],
        ),
        returnValue: _i3.Future<List<int>>.value(<int>[]),
      ) as _i3.Future<List<int>>);

  @override
  _i3.Future<List<_i6.MainItemModel>> getAllFromJson(_i5.SiteType? siteType) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllFromJson,
          [siteType],
        ),
        returnValue:
            _i3.Future<List<_i6.MainItemModel>>.value(<_i6.MainItemModel>[]),
      ) as _i3.Future<List<_i6.MainItemModel>>);

  @override
  _i3.Future<void> deleteAll(_i5.SiteType? siteType) => (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [siteType],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> hasItem(
    _i5.SiteType? siteType,
    _i4.MainItem? item,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #hasItem,
          [
            siteType,
            item,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
