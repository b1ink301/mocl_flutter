// Mocks generated by Mockito 5.4.6 from annotations
// in mocl_flutter/test/features/mocl/data/datasoures/mocl_detail_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:dio/dio.dart' as _i13;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:mocl_flutter/features/mocl/data/datasources/detail_data_source.dart'
    as _i2;
import 'package:mocl_flutter/features/mocl/data/datasources/remote/base/base_parser.dart'
    as _i8;
import 'package:mocl_flutter/features/mocl/domain/entities/last_id.dart'
    as _i11;
import 'package:mocl_flutter/features/mocl/domain/entities/mocl_comment_item.dart'
    as _i14;
import 'package:mocl_flutter/features/mocl/domain/entities/mocl_details.dart'
    as _i5;
import 'package:mocl_flutter/features/mocl/domain/entities/mocl_list_item.dart'
    as _i6;
import 'package:mocl_flutter/features/mocl/domain/entities/mocl_main_item.dart'
    as _i12;
import 'package:mocl_flutter/features/mocl/domain/entities/mocl_result.dart'
    as _i4;
import 'package:mocl_flutter/features/mocl/domain/entities/mocl_site_type.dart'
    as _i9;
import 'package:mocl_flutter/features/mocl/domain/entities/sort_type.dart'
    as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [DetailDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockDetailDataSource extends _i1.Mock implements _i2.DetailDataSource {
  MockDetailDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<_i5.Details>> getDetail(_i6.ListItem? item) =>
      (super.noSuchMethod(
            Invocation.method(#getDetail, [item]),
            returnValue: _i3.Future<_i4.Result<_i5.Details>>.value(
              _i7.dummyValue<_i4.Result<_i5.Details>>(
                this,
                Invocation.method(#getDetail, [item]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i5.Details>>);
}

/// A class which mocks [BaseParser].
///
/// See the documentation for Mockito's code generation for more information.
class MockBaseParser extends _i1.Mock implements _i8.BaseParser {
  MockBaseParser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.SiteType get siteType =>
      (super.noSuchMethod(
            Invocation.getter(#siteType),
            returnValue: _i9.SiteType.clien,
          )
          as _i9.SiteType);

  @override
  String get baseUrl =>
      (super.noSuchMethod(
            Invocation.getter(#baseUrl),
            returnValue: _i7.dummyValue<String>(
              this,
              Invocation.getter(#baseUrl),
            ),
          )
          as String);

  @override
  String urlByMain() =>
      (super.noSuchMethod(
            Invocation.method(#urlByMain, []),
            returnValue: _i7.dummyValue<String>(
              this,
              Invocation.method(#urlByMain, []),
            ),
          )
          as String);

  @override
  String urlByList(
    String? url,
    String? board,
    int? page,
    _i10.SortType? sortType,
    _i11.LastId? lastId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#urlByList, [url, board, page, sortType, lastId]),
            returnValue: _i7.dummyValue<String>(
              this,
              Invocation.method(#urlByList, [
                url,
                board,
                page,
                sortType,
                lastId,
              ]),
            ),
          )
          as String);

  @override
  String urlBySearchList(
    String? url,
    String? board,
    int? page,
    String? keyword,
    _i11.LastId? lastId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#urlBySearchList, [
              url,
              board,
              page,
              keyword,
              lastId,
            ]),
            returnValue: _i7.dummyValue<String>(
              this,
              Invocation.method(#urlBySearchList, [
                url,
                board,
                page,
                keyword,
                lastId,
              ]),
            ),
          )
          as String);

  @override
  String urlByDetail(String? url, String? board, int? id) =>
      (super.noSuchMethod(
            Invocation.method(#urlByDetail, [url, board, id]),
            returnValue: _i7.dummyValue<String>(
              this,
              Invocation.method(#urlByDetail, [url, board, id]),
            ),
          )
          as String);

  @override
  String urlByComments(String? url, String? board, int? id, int? page) =>
      (super.noSuchMethod(
            Invocation.method(#urlByComments, [url, board, id, page]),
            returnValue: _i7.dummyValue<String>(
              this,
              Invocation.method(#urlByComments, [url, board, id, page]),
            ),
          )
          as String);

  @override
  _i3.Future<_i4.Result<List<_i12.MainItem>>> main(
    _i13.Response<dynamic>? response,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#main, [response]),
            returnValue: _i3.Future<_i4.Result<List<_i12.MainItem>>>.value(
              _i7.dummyValue<_i4.Result<List<_i12.MainItem>>>(
                this,
                Invocation.method(#main, [response]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<_i12.MainItem>>>);

  @override
  _i3.Future<_i4.Result<List<_i6.ListItem>>> list(
    _i13.Response<dynamic>? response,
    _i11.LastId? lastId,
    String? boardTitle,
    _i3.Future<List<int>> Function(_i9.SiteType, List<int>)? isReads,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#list, [response, lastId, boardTitle, isReads]),
            returnValue: _i3.Future<_i4.Result<List<_i6.ListItem>>>.value(
              _i7.dummyValue<_i4.Result<List<_i6.ListItem>>>(
                this,
                Invocation.method(#list, [
                  response,
                  lastId,
                  boardTitle,
                  isReads,
                ]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<_i6.ListItem>>>);

  @override
  _i3.Future<_i4.Result<_i5.Details>> detail(
    _i13.Response<dynamic>? response,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#detail, [response]),
            returnValue: _i3.Future<_i4.Result<_i5.Details>>.value(
              _i7.dummyValue<_i4.Result<_i5.Details>>(
                this,
                Invocation.method(#detail, [response]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i5.Details>>);

  @override
  _i3.Future<_i4.Result<List<_i14.CommentItem>>> comments(
    _i13.Response<dynamic>? response,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#comments, [response]),
            returnValue: _i3.Future<_i4.Result<List<_i14.CommentItem>>>.value(
              _i7.dummyValue<_i4.Result<List<_i14.CommentItem>>>(
                this,
                Invocation.method(#comments, [response]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<_i14.CommentItem>>>);
}
